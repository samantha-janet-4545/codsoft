import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class WordCount {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Step 1: Prompt user for text input or file input
        System.out.println("Choose an option:");
        System.out.println("1. Enter text manually");
        System.out.println("2. Provide a file to count words");
        int option = scanner.nextInt();

        String text = "";
        switch (option) {
            case 1:
                // Step 2: Read text input
                System.out.println("Enter your text:");
                scanner.nextLine(); // Consume newline left-over
                text = scanner.nextLine();
                break;
            case 2:
                // Step 2: Read file input
                System.out.println("Enter the file path:");
                scanner.nextLine(); // Consume newline left-over
                String filePath = scanner.nextLine();
                try {
                    text = readFile(filePath);
                } catch (IOException e) {
                    System.out.println("Error reading file: " + e.getMessage());
                    return;
                }
                break;
            default:
                System.out.println("Invalid option. Exiting program.");
                return;
        }

        // Step 3: Split the text into words using delimiters and count words
        String[] words = text.split("[\\s\\p{Punct}]+");
        int wordCount = words.length;

        // Step 4: Initialize a map to store word frequency
        Map<String, Integer> wordFrequency = new HashMap<>();

        // Step 5: Populate word frequency map and ignore common words
        for (String word : words) {
            // Ignore common words (can be expanded as needed)
            String cleanedWord = word.toLowerCase();
            if (isCommonWord(cleanedWord)) {
                continue;
            }
            
            // Update word frequency
            int count = wordFrequency.getOrDefault(cleanedWord, 0);
            wordFrequency.put(cleanedWord, count + 1);
        }

        // Step 6: Display total word count
        System.out.println("Total words counted: " + wordCount);

        // Step 7: Display unique word count
        System.out.println("Unique words counted: " + wordFrequency.size());

        // Step 8: Display word frequency
        System.out.println("Word frequency:");
        for (Map.Entry<String, Integer> entry : wordFrequency.entrySet()) {
            System.out.println(entry.getKey() + ": " + entry.getValue());
        }

        scanner.close();
    }

    // Helper method to read file content
    private static String readFile(String filePath) throws IOException {
        StringBuilder content = new StringBuilder();
        BufferedReader reader = new BufferedReader(new FileReader(filePath));
        String line;
        while ((line = reader.readLine()) != null) {
            content.append(line).append("\n");
        }
        reader.close();
        return content.toString();
    }

    // Helper method to ignore common words
    private static boolean isCommonWord(String word) {
        String[] commonWords = {"a", "an", "the", "and", "or", "but", "to", "of", "for", "in", "on", "at", "with", "by"};
        for (String common : commonWords) {
            if (word.equals(common)) {
                return true;
            }
        }
        return false;
    }
}
